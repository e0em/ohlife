# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application
# 選定要發動actions 的分支
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  # 用crontab 方式也是可以
  # schedule:
  # - cron: "0 2 * * 1-5"
  # 支援手動執行
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    # OS 的選擇，ubuntu-18.04，windows-2019，macos-10.15
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest bs4 eml_parser
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
    - name: Deploy On Production Server
      env:
        PASSPHRASE: ${{ secrets.PASS }}
      run: |
        eval $(ssh-agent -s)
        ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}"
        ls -al 
        ls -al ./secrets
        pwd
        id
        uname -a
        gpg --quiet --batch --yes --passphrase=$PASSPHRASE --output ./secrets/key --decrypt ./secrets/id_rsa.gpg 
        ssh -A -o StrictHostKeyChecking=no -i ./secrets/key marty@fw.freedom-tek.com "cd github/ohlife;git pull"
